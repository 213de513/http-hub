(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{511:function(t,a,r){t.exports=r.p+"assets/img/diagram.d1d71f89.jpg"},520:function(t,a,r){"use strict";r.r(a);var e=r(2),h=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"http-hub-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-hub-是什么"}},[t._v("#")]),t._v(" http-hub 是什么？")]),t._v(" "),e("p",{staticStyle:{"text-indent":"2em"}},[t._v("http-hub 顾名思义 http 请求中心，即是一款 http 请求集中管理和统一异常捕获的工具。可以帮助用户在开发阶段将 http 请求相关配置集中管理起来，在网络层将请求和响应进行有效拦截，在响应过程中如遇异常则会根据"),e("a",{attrs:{href:"/f/http-hub-doc/inner/errorTemp.html"}},[t._v("异常模板")]),t._v("将异常抛出至应用层，并为应用层提供提供了一个"),e("a",{attrs:{href:"/f/http-hub-doc/inner/api.html#errorhandler"}},[t._v("异常捕获API")]),t._v("，可以一行代码实现不同异常场景的捕获。")]),t._v(" "),e("h2",{attrs:{id:"我为什么要用-http-hub"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#我为什么要用-http-hub"}},[t._v("#")]),t._v(" 我为什么要用 http-hub？")]),t._v(" "),e("p",[t._v("在平时的开发中，是否有以下让你头疼的情况出现：")]),t._v(" "),e("ul",[e("li",[t._v("api 管理不规范，请求的地址揉在视图文件（vue）中，前期难开发，后期难维护")]),t._v(" "),e("li",[t._v("请求/响应数据没有拦截，如需要拦截还需要重写（复制 粘贴）代码")]),t._v(" "),e("li",[t._v("异常场景过多，没办法统一处理")]),t._v(" "),e("li",[t._v("调用方式极其繁琐，get、post 传递参数方式不一致，容易出问题")]),t._v(" "),e("li",[t._v("无法实现多 baseURL 的场景，一套代码请求两个服务器地址很难实现")]),t._v(" "),e("li",[t._v("响应数据没有解析，需要 res.data.data 才能拿到返回值")]),t._v(" "),e("li",[t._v("同一请求短时间多次触发，需要建立多个连接，耗时耗资源")]),t._v(" "),e("li",[t._v("eolinker 里写了一堆接口，没办法直接在项目里用，还需要在项目再写一遍")])]),t._v(" "),e("p",[t._v("以上问题，在 http-hub 的加持下已经不再是问题，用户要做的就是按需配置，按需调用。剩下的就全交给 http-hub 了 😊")]),t._v(" "),e("h2",{attrs:{id:"流程图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程图"}},[t._v("#")]),t._v(" 流程图")]),t._v(" "),e("p",[e("img",{attrs:{src:r(511),alt:"流程图"}})])])}),[],!1,null,null,null);a.default=h.exports}}]);